/*
 * VirtualModule.h
 *
 *  Created on: Apr 4, 2017
 *      Author: Martin Hierholzer
 */

#ifndef CHIMERATK_VIRTUAL_MODULE_H
#define CHIMERATK_VIRTUAL_MODULE_H

#include <list>

#include <boost/thread.hpp>

#include "Module.h"

namespace ChimeraTK {

  /** A virtual module generated by EntityOwner::findTag(). */
  class VirtualModule : public Module {

    public:

      /** Constructor */
      VirtualModule(const std::string &name, const std::string &description) : Module(nullptr, name, description) {}

      /** Copy constructor */
      VirtualModule(const VirtualModule &other);

      /** Destructor */
      virtual ~VirtualModule();

      VariableNetworkNode operator()(const std::string& variableName) const override;

      Module& operator[](const std::string& moduleName) const override;
      
      /** Add a virtual sub-module. The module instance will be added to an internal list. */
      void addSubModule(VirtualModule module);
      
    protected:
    
      std::list<VirtualModule> submodules;

  };

} /* namespace ChimeraTK */

#endif /* CHIMERATK_VIRTUAL_MODULE_H */
